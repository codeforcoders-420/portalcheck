Development of Spring Boot-Based Web Application for Automation Tools
Overview:
As part of our internal digital transformation and efficiency initiatives, I contributed significantly to the design and development of a Java-based Spring Boot web application that hosts a suite of automation tools. This project eliminates the dependency on standalone installations and enables cross-team accessibility through a centralized browser-based interface.

Key Contributions:

Web Architecture & Backend:

Designed and developed a scalable backend using Spring Boot and Java 17, supporting multi-user sessions with Spring Security, role-based access, and session management.

Implemented REST APIs to handle dynamic file input, validation, database queries, and Excel output generation.

Utilized Windows authentication to securely connect with Microsoft SQL Server Management Studio, eliminating hard-coded credentials.

Frontend Development:

Built interactive, responsive UI using HTML, CSS, Thymeleaf, and JavaScript, with intuitive forms for file uploads, dropdowns, and status messages.

Integrated real-time features using WebSockets for live progress updates during long-running validations.

Automation & Data Processing:

Implemented logic to read Excel files, apply scrubbing/filtering rules, compare datasets, and generate result files.

Automated workflows that previously required manual execution, improving speed and accuracy.

Advanced Features:

Auto-prefill mechanism to detect the latest files from shared folders for user convenience.

Role-specific functionalities (Admin vs Analyst), such as user approval modals and login/session-based access control.

Integrated post-processing logic for multi-quarter comparisons with intelligent categorization of changes (e.g., New Code, Rate Change, Terminate).

DevOps and Deployment:

Hosted the application using Apache Tomcat on a shared server, enabling access across the company network via browser.

Managed version control and CI/CD pipelines using Git and internal repositories (e.g., JFrog Artifactory).

Outcome & Impact:

Improved operational efficiency and collaboration across teams by centralizing multiple utility tools into one platform.

Reduced manual efforts by ~70% for validation and comparison tasks.

Enabled faster turnaround and improved accuracy in data processing.

Positive feedback received from both end users and stakeholders for usability and reliability.

*******************************************************************************

Automation Applications in the Spring Boot Web Platform
Compare Files

Compares two standard Excel files and highlights changes, including rate mismatches and new/terminated codes.

Change File Generator

Generates change files by comparing current and previous quarter fee schedules with precise classification of updates.

PDF to Excel Converter

Extracts tabular data from complex PDF files and converts it into clean, structured Excel sheets for further analysis.

Standard File Analyzer

Analyzes uploaded Excel files to apply scrub rules and classify records based on predefined logic and rate conditions.

State Portal File Checker

Navigates state portals to verify the availability of quarterly ASP pricing files and automates file downloads.

Query Executor

Executes dynamic SQL queries stored in Excel against the SQL Server database using Windows authentication and exports results to Excel.

Access Database Comparator

Uploads Excel data into MS Access and compares week-on-week data to identify mismatches and exact matches.

DT Span Comparator

Compares processed DT Span output with actual data from query results to identify discrepancies at a granular level.

Pending Users Manager (Admin-only feature)

Allows administrators to review and approve or reject pending user registrations from within the application UI.

Login & Signup with Approval Workflow

Enables secure login and user registration with admin approval and role-based access control.

**********************************************************************************

Project Title: Spring Boot Web Application for Automation Platform
Overview:
As part of a collaborative team initiative to centralize automation tools into a web-based platform, I played a key development role in designing and implementing a Spring Boot Java web application. This application replaces manual Excel-based processes with a scalable, browser-accessible interface that improves team productivity and reduces human errors.

Key Contributions & Ownership:
Core Development & Technical Leadership:

Took primary ownership of the backend architecture using Spring Boot (Java 17), leading the implementation of key modules including file handling, Excel processing, database integration, and session-based login features.

Collaborated with my team lead to validate the design approach, incorporating their suggestions into technical decisions.

Modular Application Design:

Designed and developed multiple automation modules, each built as a self-contained service, enabling smooth extensibility and maintenance.

Collaboration & Team Integration:

Worked closely with my team lead and peers during requirements gathering and sprint reviews, ensuring alignment with business needs and technical feasibility.

Regularly shared progress through demos and Git commits, and participated in peer code reviews to uphold project code quality.

Applications Developed (with Team Collaboration):
Compare Files

Led the development of this tool to detect mismatches between Excel files, including differences in procedure rates and modifier logic.

Change File Generator

Independently implemented file comparison logic to identify new codes, terminated records, and rate changes between quarterly fee schedules.

PDF to Excel Converter

Worked with the team to design parsing logic and took ownership of developing the core algorithm to extract complex PDF tables into structured Excel output.

Standard File Analyzer

Developed this module to apply scrub rules and automate classification of fee schedule entries based on business rules.

State Portal File Checker

Automated portal navigation using Selenium; collaborated with QA for validating various scenarios and file download confirmations.

Query Executor

Implemented logic to dynamically read SQL queries from Excel and connect to SQL Server using Windows authentication, reducing manual effort in executing bulk queries.

Access Database Comparator

Developed the workflow for importing Excel into MS Access and comparing weekly data for mismatches, working in sync with VBA developers to align logic.

DT Span Comparator

Owned the logic to match generated DT Span output with real-time database results, ensuring high accuracy in final reports.

Pending Users Manager (Admin-only Feature)

Built the modal interface and backend logic for admin-level approval of pending users, ensuring secure and seamless user management.

User Authentication & Role Management

Implemented role-based login/signup with session management, and introduced logic for account locking after failed login attempts.

Outcome & Impact:
Enabled cross-team access to critical automation tools through a single web interface.

Reduced manual work and errors by 70–80% in comparison and validation processes.

Fostered a collaborative development culture while independently delivering key modules on time.

Received appreciation from stakeholders for the platform’s usability, reliability, and maintainability.

*************************************


Applications in the E2E Workflow Automation Platform
Change File [Scrub]

Generates a change file after applying scrub rules to filter out invalid or incomplete records.

Change File [No Scrub]

Produces a raw change file by directly comparing datasets without applying scrub rules.

DT Files Generate

Creates DT Span files by transforming source Excel data into a standardized export format.

PreDev - DB2DB

Compares development environment database tables (pre-deployment) to identify discrepancies before release.

PostDev - DB2DB

Validates database integrity by comparing post-deployment tables in the development environment.

Standard Change File

Generates a standardized Excel change file summarizing procedure code updates across versions.

Peer Review Validator

Validates submitted peer review files for formatting, completeness, and logical consistency.

IR Form Generator

Automatically populates the Implementation Request (IR) form based on processed change data.

PostPRD - DB2DB

Compares production database tables after deployment to verify successful implementation.

Impact Report Generator

Generates a comprehensive report outlining the impact of fee schedule or procedural code changes.

IR Compare

Compares multiple Implementation Request files to identify differences and ensure consistency.

Standard SQL Queries

Executes a predefined set of SQL queries on the database to extract insights and verify data integrity.

Upload Latest Files

Allows users to upload the most recent version of input files to initiate validation and comparison workflows.


*************************************

Facets NetworX Deliverable – Mississippi Medicaid Fee Schedule Deployment
As part of the Facets NetworX initiative, I successfully led the delivery of the Mississippi Medicaid Fee Schedule to the Production environment. This deliverable involved handling 47 individual fee schedules, each of which I meticulously reviewed against Market-specific scrub rules to ensure data accuracy and compliance. I validated the structure, logic, and integrity of every fee schedule before deployment and worked closely with the relevant teams to ensure seamless integration into the Medicaid Fee Schedule tables. Additionally, I partnered with the RPA team to transition this manual process into a fully automated Robotic Process Automation (RPA) workflow — reducing future manual effort, ensuring repeatability, and enhancing long-term process efficiency.
