//button[h3[contains(text(),'2025 ASP Drug Pricing')]]

driver.findElement(By.xpath("//button[h3[contains(text(),'2025 ASP Drug Pricing')]]")).click();

String year = getYearFromQuarter(quarter);  // e.g., "2025"
String sectionXPath = "//button[h3[contains(text(), '" + year + " ASP Drug Pricing')]]";

WebElement yearButton = driver.findElement(By.xpath(sectionXPath));
yearButton.click();
Thread.sleep(2000);


*****************************************************************


String year = getYearFromQuarter(quarter);  // e.g. "2025"
String sectionXPath = "//button[contains(text(), '" + year + " ASP Drug Pricing')]";

// Expand the section
WebElement yearButton = driver.findElement(By.xpath(sectionXPath));
yearButton.click();
Thread.sleep(2000);

// Now find the file link under that year
String month = getMonthFromQuarter(quarter);  // e.g. "July"
String linkText = month + " " + year + " ASP Pricing File";
List<WebElement> links = driver.findElements(By.partialLinkText(linkText));

if (!links.isEmpty()) {
    links.get(0).click();
    Thread.sleep(5000);
}

******************

String month = getMonthFromQuarter(quarter);
String linkText = month + " " + year + " ASP Pricing File";

List<WebElement> links = driver.findElements(By.partialLinkText(linkText));
if (!links.isEmpty()) {
    links.get(0).click(); // Download link
    Thread.sleep(5000);
}

*********************




function checkAndDownload(event) {
    if (event) event.preventDefault(); // Prevent form from submitting

    const selectedQuarters = Array.from(document.querySelectorAll("input[name='quarters']:checked"))
                                  .map(cb => cb.value);
    const selectedFeeSchedule = document.getElementById("feeSchedule").value;
    const storyNumber = document.getElementById("storyNumber").textContent.trim();
    const year = document.getElementById("year").textContent.trim();
    const lob = document.getElementById("lob").textContent.trim();

    fetch('/download_file', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            feeSchedule: selectedFeeSchedule,
            quarters: selectedQuarters,
            storyNumber: storyNumber,
            year: year,
            lob: lob
        })
    })
    .then(res => res.text())
    .then(msg => document.getElementById("status").innerText = msg)
    .catch(err => console.error(err));
}

*************************************

<button type="button" onclick="checkAndDownload(event)">Check and Download File</button>

***************************************





<div class="app-section">
  <h3>File check in State Portal</h3>
  
  <label for="feeSchedule">Select Fee Schedule:</label>
  <select id="feeSchedule" name="feeSchedule">
    <option value="FS1">FS1</option>
    <option value="FS2">FS2</option>
    <!-- Add more fee schedules here -->
  </select>

  <br><br>

  <label>Check Quarters:</label><br>
  <input type="checkbox" name="quarters" value="Q3 2025"> Q3 2025<br>
  <input type="checkbox" name="quarters" value="Q2 2025"> Q2 2025<br>
  <input type="checkbox" name="quarters" value="Q1 2025"> Q1 2025<br>
  <input type="checkbox" name="quarters" value="Q4 2024"> Q4 2024<br>
  <input type="checkbox" name="quarters" value="Q3 2024"> Q3 2024<br>

  <br>
  <button onclick="checkAndDownload()">Check and Download File</button>

  <p id="status"></p>
</div>

<script>
  function checkAndDownload() {
    const selectedQuarters = Array.from(document.querySelectorAll('input[name="quarters"]:checked'))
                                  .map(cb => cb.value);
    const selectedFeeSchedule = document.getElementById('feeSchedule').value;

    fetch('/cms/download-file', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        feeSchedule: selectedFeeSchedule,
        quarters: selectedQuarters
      })
    })
    .then(res => res.text())
    .then(msg => document.getElementById('status').innerText = msg)
    .catch(err => console.error(err));
  }
</script>

************************************************************************

@RestController
@RequestMapping("/cms")
public class CmsFileDownloadController {

    @PostMapping("/download-file")
    public ResponseEntity<String> downloadFile(@RequestBody CmsRequest request) {
        try {
            CmsFileChecker.downloadSelectedFiles(request.getFeeSchedule(), request.getQuarters());
            return ResponseEntity.ok("File(s) checked and downloaded successfully!");
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                                 .body("Failed: " + e.getMessage());
        }
    }
}

*********************************************************************
public class CmsRequest {
    private String feeSchedule;
    private List<String> quarters;

    // Getters and Setters
}
***************************************************************

public class CmsFileChecker {

   public static void downloadSelectedFiles(String feeSchedule, List<String> quarters) throws Exception {
        // Automatically resolves and sets up EdgeDriver
        WebDriverManager.edgedriver().setup();

        // Set download directory
        HashMap<String, Object> edgePrefs = new HashMap<>();
        edgePrefs.put("download.default_directory", "C:\\users\\tfs\\54123\\CMS");
        edgePrefs.put("profile.default_content_settings.popups", 0);

        EdgeOptions options = new EdgeOptions();
        options.setExperimentalOption("prefs", edgePrefs);

        WebDriver driver = new EdgeDriver(options);
        driver.get("https://www.cms.gov/medicare/payment/fee-for-service-providers/part-b-drugs/average-drug-sales-price");

        driver.findElement(By.linkText("ASP Pricing Files")).click();
        Thread.sleep(2000); // Let the panel load

        for (String quarter : quarters) {
            String year = getYearFromQuarter(quarter);
            String month = getMonthFromQuarter(quarter);
            String sectionXPath = "//button[contains(text(),'" + year + "')]";

            WebElement yearSection = driver.findElement(By.xpath(sectionXPath));
            yearSection.click();
            Thread.sleep(1000);

            String linkText = month + " " + year + " ASP Pricing File";
            List<WebElement> links = driver.findElements(By.partialLinkText(linkText));

            if (!links.isEmpty()) {
                links.get(0).click();
                Thread.sleep(5000); // Wait for file to download
            }
        }

        driver.quit();
    }

    private static String getYearFromQuarter(String q) {
        return q.split(" ")[1];
    }

    private static String getMonthFromQuarter(String q) {
        return switch (q.split(" ")[0]) {
            case "Q1" -> "January";
            case "Q2" -> "April";
            case "Q3" -> "July";
            case "Q4" -> "October";
            default -> "";
        };
    }
}
